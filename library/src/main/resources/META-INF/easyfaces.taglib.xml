<?xml version="1.0" encoding="utf-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->
<facelet-taglib version="2.0" xmlns="http://java.sun.com/xml/ns/javaee"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd">
 <namespace>http://ar.com.easytech/easyfaces</namespace>
 <!-- Component Tags -->
 <tag>
  <tag-name>draggable</tag-name>
  <component>
   <component-type>ar.com.easytech.Draggable</component-type>
   <handler-class/>
  </component>
  <attribute>
   <name>for</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>draggableSelector</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>revert</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>containTo</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <description>Gets The initial value of this component.</description>
   <name>value</name>
   <type>java.lang.Object</type>
  </attribute>
  <attribute>
   <description>An expression that specifies the Converter for this component.
&lt;p&gt;
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
&lt;/p&gt;</description>
   <name>converter</name>
   <type>javax.faces.convert.Converter</type>
  </attribute>
  <attribute>
   <description>Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.</description>
   <name>id</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <description>A boolean value that indicates whether this component should be rendered. Default value: true.</description>
   <name>rendered</name>
   <type>boolean</type>
  </attribute>
  <attribute>
   <description>Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind to this component instance. This value must be an EL expression.</description>
   <name>binding</name>
   <type>javax.faces.component.UIComponent</type>
  </attribute>
 </tag>
 <tag>
  <tag-name>droppable</tag-name>
  <component>
   <component-type>ar.com.easytech.Droppable</component-type>
   <handler-class/>
  </component>
  <attribute>
   <name>for</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>droppableSelector</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>activeClass</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>hoverClass</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>accept</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>tolerance</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <name>source</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <description>Gets The initial value of this component.</description>
   <name>value</name>
   <type>java.lang.Object</type>
  </attribute>
  <attribute>
   <description>An expression that specifies the Converter for this component.
&lt;p&gt;
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
&lt;/p&gt;</description>
   <name>converter</name>
   <type>javax.faces.convert.Converter</type>
  </attribute>
  <attribute>
   <description>Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.</description>
   <name>id</name>
   <type>java.lang.String</type>
  </attribute>
  <attribute>
   <description>A boolean value that indicates whether this component should be rendered. Default value: true.</description>
   <name>rendered</name>
   <type>boolean</type>
  </attribute>
  <attribute>
   <description>Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind to this component instance. This value must be an EL expression.</description>
   <name>binding</name>
   <type>javax.faces.component.UIComponent</type>
  </attribute>
 </tag>
 <!-- Converter tags 
 Validator tags 
 Behavior tags 
 Single Tags 
 Facelet Tags -->
</facelet-taglib>
